#    General Configuration      #
#    Environment Configuration    #
environment:
  appveyor_auth_token:
    secure:'mbgPeg6VB7oIYlnLQNd4XDi5/i46y+O/xXNKsnfdFFusOJjfxS5F1U1yZISa3aGg=='
# Appveyor auth token encrypted  
# Build worker image (VM template)
image:
- Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
# init:

version: 1.9.{build}
# clone directory
clone_folder: c:\project\weatherfax_pi
# fetch repository as zip archive
shallow_clone: true   # default is "false"
# set clone depth, clone entire repository history if not defined
# clone_depth:5

# Build Configuration       #
# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: 
# - x64
  - Win32

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to run tests against only selected assemblies and/or categories
test: OFF

# scripts that run after cloning repository
install:
  - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86'

  # sent environment variables for wxWidgets
  - set WXWIN=C:\wxWidgets-3.0.2
  - set wxWidgets_ROOT_DIR=%WXWIN%
  - set wxWidgets_LIB_DIR=%WXWIN%\lib\vc_dll
  - cmd: SET PATH=%PATH%;%WXWIN%;%wxWidgets_LIB_DIR%;C:\Program Files (x86)\Poedit\Gettexttools\bin;

  # install dependencies:
  - choco install poedit nsis -x86

  # Download and unzip wxwidgets
  - ps: Start-FileDownload http://downloads.sourceforge.net/project/wxwindows/3.0.2/wxWidgets-3.0.2.zip
  - cmd: 7z x wxwidgets-3.0.2.zip -o%WXWIN% > null

  # some debugging information
  - set
  # - cmake --help

  # build wxWidgets
  - cmd: cd %WXWIN%\build\msw\
  - cmd: nmake -f makefile.vc BUILD=release SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_
  - cmd: nmake -f makefile.vc BUILD=debug SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_

# scripts to run before build
before_build:
  - cd c:\project\weatherfax_pi
  - cd buildwin
  - ps: Start-FileDownload https://downloads.sourceforge.net/project/opencpnplugins/opencpn_packaging_data/PVW32Con.exe
  - cd ..
  - mkdir build
  - cd build
  - ps: Start-FileDownload https://downloads.sourceforge.net/project/opencpnplugins/opencpn_lib/4.2-vc120_xp/opencpn.lib
  - ps: Start-FileDownload https://downloads.sourceforge.net/project/opencpnplugins/opencpn_packaging_data/OpenCPN_buildwin.7z
  - cmd: 7z x -y OpenCPN_buildwin.7z -oc:\project\weatherfax_pi
  - ps: Start-FileDownload https://sourceforge.net/projects/opencpnplugins/files/opencpn_packaging_data/portaudio-vc12.7z
  - cmd: 7z x -y portaudio-vc12.7z -oc:\project\weatherfax_pi\buildwin
  - cmake -T v120_xp ..

# to run your custom scripts instead of automatic MSBuild
build_script:
  # - cmake --build . --config debug
  - cmake --build . --target package --config release

# Artifacts Configuration    #
artifacts: # push all files in directory
  - path: build\weatherfax_pi*.exe
    name: installer
# Deploy to GitHub Releases
deploy:
  release: weatherfax_pi-v $(APPVEYOR_REPO_TAG_NAME) -win32
  description: 'Release of weatherfax_pi $(APPVEYOR_REPO_TAG_NAME) tag created by AppVeyor build $(appveyor_build_version)'
  provider: GitHub
  artifact: installer, portable
  draft: true
  prerelease: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
#   APPVEYOR_REPO_TAG: true   # deploy on tag push only
    configuration: Release    # Debug contains non-redist MS DLLs
#   branch: master   # release from master branch only